{"ast":null,"code":"var _jsxFileName = \"/Users/ormalka/Twitter/React/twitter-app/src/components/TweetItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as faEmptyHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeart as faSolidHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from 'react-redux';\nimport { likeTweet } from '../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetItem(props) {\n  _s();\n\n  const [isLiked, setIsLiked] = useState(false);\n\n  const handleLike = id => {\n    setIsLiked(!isLiked);\n    if (!isLiked) props.onLike({\n      id: id,\n      isLiked: !isLiked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweet-item bordered\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-item-pic\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.pic,\n        alt: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-item-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-item-text-name\",\n        children: props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-item-text-content\",\n        children: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like-btn\",\n        onClick: () => handleLike(props.id),\n        children: !isLiked ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faEmptyHeart,\n          size: \"1x\",\n          color: \"rgb(83, 100, 113)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSolidHeart,\n          size: \"1x\",\n          color: \"rgb(224, 36, 94)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TweetItem, \"eHCM9bKEgGkXltnJZ+5NUCvkPlo=\");\n\n_c = TweetItem;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLike: tweet => dispatch(likeTweet(tweet))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TweetItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetItem\");","map":{"version":3,"sources":["/Users/ormalka/Twitter/React/twitter-app/src/components/TweetItem.js"],"names":["React","useState","FontAwesomeIcon","faHeart","faEmptyHeart","faSolidHeart","connect","likeTweet","TweetItem","props","isLiked","setIsLiked","handleLike","id","onLike","pic","username","content","mapDispatchToProps","dispatch","tweet"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAO,IAAIC,YAApB,QAAwC,qCAAxC;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,mCAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMW,UAAU,GAAIC,EAAD,IAAQ;AACvBF,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACA,QAAI,CAACA,OAAL,EAAcD,KAAK,CAACK,MAAN,CAAa;AAAED,MAAAA,EAAE,EAAEA,EAAN;AAAUH,MAAAA,OAAO,EAAE,CAACA;AAApB,KAAb;AACjB,GAHD;;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAK,QAAA,GAAG,EAAED,KAAK,CAACM,GAAhB;AAAqB,QAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAIH;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBAAuCN,KAAK,CAACO;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,kBAA0CP,KAAK,CAACQ;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAE,MAAML,UAAU,CAACH,KAAK,CAACI,EAAP,CAAnD;AAAA,kBACK,CAACH,OAAD,gBAAW,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEN,YAAvB;AAAqC,UAAA,IAAI,EAAC,IAA1C;AAA+C,UAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,gBAAX,gBACG,QAAC,eAAD;AAAiB,UAAA,IAAI,EAAEC,YAAvB;AAAqC,UAAA,IAAI,EAAC,IAA1C;AAA+C,UAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;GArBQG,S;;KAAAA,S;;AAuBT,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHL,IAAAA,MAAM,EAAGM,KAAD,IAAWD,QAAQ,CAACZ,SAAS,CAACa,KAAD,CAAV;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCV,SAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as faEmptyHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHeart as faSolidHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { connect } from 'react-redux';\nimport { likeTweet } from '../actions/actions'\n\n\nfunction TweetItem(props) {\n    const [isLiked, setIsLiked] = useState(false);\n\n    const handleLike = (id) => {\n        setIsLiked(!isLiked);\n        if (!isLiked) props.onLike({ id: id, isLiked: !isLiked });\n    }\n\n    return <div className=\"tweet-item bordered\">\n        <div className=\"tweet-item-pic\">\n            <img src={props.pic} alt=\"profile\" />\n        </div>\n        <div className=\"tweet-item-text\">\n            <div className=\"tweet-item-text-name\">{props.username}</div>\n            <div className=\"tweet-item-text-content\">{props.content}</div>\n            <div className=\"like-btn\" onClick={() => handleLike(props.id)}>\n                {!isLiked ? <FontAwesomeIcon icon={faEmptyHeart} size=\"1x\" color=\"rgb(83, 100, 113)\" /> :\n                    <FontAwesomeIcon icon={faSolidHeart} size=\"1x\" color=\"rgb(224, 36, 94)\" />}\n            </div>\n        </div>\n    </div>\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLike: (tweet) => dispatch(likeTweet(tweet))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TweetItem);\n"]},"metadata":{},"sourceType":"module"}