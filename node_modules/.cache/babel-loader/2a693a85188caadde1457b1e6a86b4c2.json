{"ast":null,"code":"var _jsxFileName = \"/Users/ormalka/Twitter/React/twitter-app/src/components/TweetList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TweetItem from './TweetItem';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TweetList(props) {\n  _s();\n\n  // const [tweetList, setTweetList] = useState(props.list);\n  useEffect(() => {\n    console.log(\"useEffect\");\n  }, [props.tweets]);\n  const tweetList = props.tweets ? props.tweets : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tweet-list\",\n    className: \"tweet-list\",\n    children: tweetList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(TweetItem, {\n        pic: item.picture,\n        username: item.username,\n        content: item.tweetData\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 50\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TweetList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TweetList;\n\nconst mapStateToProps = state => {\n  console.log(\"mapStateToProps - TweetList\");\n  console.log(state.tweets);\n  return { ...state.tweets\n  };\n};\n\nexport default connect(mapStateToProps, null)(TweetList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetList\");","map":{"version":3,"sources":["/Users/ormalka/Twitter/React/twitter-app/src/components/TweetList.js"],"names":["React","useState","useEffect","TweetItem","connect","TweetList","props","console","log","tweets","tweetList","map","item","index","picture","username","tweetData","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GAFQ,EAEN,CAACF,KAAK,CAACG,MAAP,CAFM,CAAT;AAGA,QAAMC,SAAS,GAAGJ,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACG,MAArB,GAA8B,EAAhD;AAEA,sBAAO;AAAK,IAAA,EAAE,EAAC,YAAR;AAAqB,IAAA,SAAS,EAAC,YAA/B;AAAA,cACFC,SAAS,CAACC,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAAE,0BAAO,QAAC,SAAD;AAAuB,QAAA,GAAG,EAAED,IAAI,CAACE,OAAjC;AAA0C,QAAA,QAAQ,EAAEF,IAAI,CAACG,QAAzD;AAAmE,QAAA,OAAO,EAAEH,IAAI,CAACI;AAAjF,SAAgBH,KAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AAAuG,KAAxI;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAVQR,S;;KAAAA,S;;AAYT,MAAMY,eAAe,GAAIC,KAAD,IAAW;AAC/BX,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACT,MAAlB;AACA,SAAO,EAAE,GAAGS,KAAK,CAACT;AAAX,GAAP;AACH,CAJD;;AAOA,eAAeL,OAAO,CAACa,eAAD,EAAkB,IAAlB,CAAP,CAA+BZ,SAA/B,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TweetItem from './TweetItem';\nimport { connect } from 'react-redux';\n\n\nfunction TweetList(props) {\n    // const [tweetList, setTweetList] = useState(props.list);\n    useEffect(() => {\n        console.log(\"useEffect\");\n    }, [props.tweets]);\n    const tweetList = props.tweets ? props.tweets : [];\n\n    return <div id=\"tweet-list\" className=\"tweet-list\">\n        {tweetList.map((item, index) => { return <TweetItem key={index} pic={item.picture} username={item.username} content={item.tweetData} /> })}\n    </div>\n}\n\nconst mapStateToProps = (state) => {\n    console.log(\"mapStateToProps - TweetList\");\n    console.log(state.tweets);\n    return { ...state.tweets };\n};\n\n\nexport default connect(mapStateToProps, null)(TweetList);"]},"metadata":{},"sourceType":"module"}